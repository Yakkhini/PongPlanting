name: Check

on:
  push:
    branches:
      - main

jobs:

  # Build for wasm
  #release-wasm:
  #  runs-on: ubuntu-latest

  #  steps:
  #    - uses: little-core-labs/get-git-tag@v3.0.1
  #      id: get_version
  #    - uses: actions/checkout@v2
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        toolchain: stable
  #        target: wasm32-unknown-unknown
  #        override: true
  #    - name: install wasm-bindgen-cli
  #      run: |
  #        cargo install wasm-bindgen-cli
  #    - name: Build
  #      run: |
  #        cargo build --release --target wasm32-unknown-unknown
  
  # Build for Linux
  release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: install dependencies
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Check
        run: |
          cargo check --release --target x86_64-unknown-linux-gnu
      
  # Build for Windows
  release-windows:
    runs-on: windows-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Check
        run: |
          cargo check --release --target x86_64-pc-windows-msvc

  # Build for macOS
  release-macos:
    runs-on: macOS-latest

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: get_version
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"
      - name: Check
        run: |
          cargo check --release --target x86_64-apple-darwin
